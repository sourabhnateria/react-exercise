{"ast":null,"code":"var _jsxFileName = \"D:\\\\React exercise\\\\conditional_rendering\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleViewComponent() {\n  _s();\n  // State to manage which view is displayed\n  const [isFirstView, setIsFirstView] = useState(true);\n\n  // Function to toggle the state\n  const toggleView = () => {\n    setIsFirstView(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Toggle Views\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), isFirstView ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"View 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the first view.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"View 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the second view.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleView,\n      children: [\"Switch to \", isFirstView ? 'View 2' : 'View 1']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleViewComponent, \"7wqjWidws3o7zWi2E4tX9kJnihs=\");\n_c = ToggleViewComponent;\nexport default ToggleViewComponent;\nvar _c;\n$RefreshReg$(_c, \"ToggleViewComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToggleViewComponent","_s","isFirstView","setIsFirstView","toggleView","prevState","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/React exercise/conditional_rendering/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\nfunction ToggleViewComponent() {\n  // State to manage which view is displayed\n  const [isFirstView, setIsFirstView] = useState(true);\n\n  // Function to toggle the state\n  const toggleView = () => {\n    setIsFirstView((prevState) => !prevState);\n  };\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '20px' }}>\n      <h1>Toggle Views</h1>\n\n      {/* Conditionally rendered content */}\n      {isFirstView ? (\n        <div>\n          <h2>View 1</h2>\n          <p>This is the first view.</p>\n        </div>\n      ) : (\n        <div>\n          <h2>View 2</h2>\n          <p>This is the second view.</p>\n        </div>\n      )}\n\n      {/* Button to toggle the view */}\n      <button onClick={toggleView}>\n        Switch to {isFirstView ? 'View 2' : 'View 1'}\n      </button>\n    </div>\n  );\n}\n\nexport default ToggleViewComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvBD,cAAc,CAAEE,SAAS,IAAK,CAACA,SAAS,CAAC;EAC3C,CAAC;EAED,oBACEN,OAAA;IAAKO,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDV,OAAA;MAAAU,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGpBX,WAAW,gBACVH,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfd,OAAA;QAAAU,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,gBAENd,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfd,OAAA;QAAAU,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACN,eAGDd,OAAA;MAAQe,OAAO,EAAEV,UAAW;MAAAK,QAAA,GAAC,YACjB,EAACP,WAAW,GAAG,QAAQ,GAAG,QAAQ;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACZ,EAAA,CAhCQD,mBAAmB;AAAAe,EAAA,GAAnBf,mBAAmB;AAkC5B,eAAeA,mBAAmB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}